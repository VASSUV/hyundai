package ru.example.hyundai.gen

import ru.example.hyundai.gen.CarsOuterClass

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cars.proto

@kotlin.jvm.JvmSynthetic
inline fun car(block: CarKt.Dsl.() -> Unit): CarsOuterClass.Car =
  CarKt.Dsl._create(CarsOuterClass.Car.newBuilder()).apply { block() }._build()
object CarKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: CarsOuterClass.Car.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: CarsOuterClass.Car.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): CarsOuterClass.Car = _builder.build()

    /**
     * <code>uint32 id = 1;</code>
     */
    var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>uint32 id = 1;</code>
     */
    fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>uint32 carId = 2;</code>
     */
    var carId: kotlin.Int
      @JvmName("getCarId")
      get() = _builder.getCarId()
      @JvmName("setCarId")
      set(value) {
        _builder.setCarId(value)
      }
    /**
     * <code>uint32 carId = 2;</code>
     */
    fun clearCarId() {
      _builder.clearCarId()
    }

    /**
     * <code>uint32 modificationId = 3;</code>
     */
    var modificationId: kotlin.Int
      @JvmName("getModificationId")
      get() = _builder.getModificationId()
      @JvmName("setModificationId")
      set(value) {
        _builder.setModificationId(value)
      }
    /**
     * <code>uint32 modificationId = 3;</code>
     */
    fun clearModificationId() {
      _builder.clearModificationId()
    }

    /**
     * <code>uint32 complectationId = 4;</code>
     */
    var complectationId: kotlin.Int
      @JvmName("getComplectationId")
      get() = _builder.getComplectationId()
      @JvmName("setComplectationId")
      set(value) {
        _builder.setComplectationId(value)
      }
    /**
     * <code>uint32 complectationId = 4;</code>
     */
    fun clearComplectationId() {
      _builder.clearComplectationId()
    }

    /**
     * <code>uint32 packageId = 5;</code>
     */
    var packageId: kotlin.Int
      @JvmName("getPackageId")
      get() = _builder.getPackageId()
      @JvmName("setPackageId")
      set(value) {
        _builder.setPackageId(value)
      }
    /**
     * <code>uint32 packageId = 5;</code>
     */
    fun clearPackageId() {
      _builder.clearPackageId()
    }

    /**
     * <code>uint32 colorExteriorId = 6;</code>
     */
    var colorExteriorId: kotlin.Int
      @JvmName("getColorExteriorId")
      get() = _builder.getColorExteriorId()
      @JvmName("setColorExteriorId")
      set(value) {
        _builder.setColorExteriorId(value)
      }
    /**
     * <code>uint32 colorExteriorId = 6;</code>
     */
    fun clearColorExteriorId() {
      _builder.clearColorExteriorId()
    }

    /**
     * <code>uint32 colorInteriorId = 7;</code>
     */
    var colorInteriorId: kotlin.Int
      @JvmName("getColorInteriorId")
      get() = _builder.getColorInteriorId()
      @JvmName("setColorInteriorId")
      set(value) {
        _builder.setColorInteriorId(value)
      }
    /**
     * <code>uint32 colorInteriorId = 7;</code>
     */
    fun clearColorInteriorId() {
      _builder.clearColorInteriorId()
    }

    /**
     * <code>uint32 countShow = 8;</code>
     */
    var countShow: kotlin.Int
      @JvmName("getCountShow")
      get() = _builder.getCountShow()
      @JvmName("setCountShow")
      set(value) {
        _builder.setCountShow(value)
      }
    /**
     * <code>uint32 countShow = 8;</code>
     */
    fun clearCountShow() {
      _builder.clearCountShow()
    }

    /**
     * <code>uint32 price = 9;</code>
     */
    var price: kotlin.Int
      @JvmName("getPrice")
      get() = _builder.getPrice()
      @JvmName("setPrice")
      set(value) {
        _builder.setPrice(value)
      }
    /**
     * <code>uint32 price = 9;</code>
     */
    fun clearPrice() {
      _builder.clearPrice()
    }

    /**
     * <code>uint32 year = 10;</code>
     */
    var year: kotlin.Int
      @JvmName("getYear")
      get() = _builder.getYear()
      @JvmName("setYear")
      set(value) {
        _builder.setYear(value)
      }
    /**
     * <code>uint32 year = 10;</code>
     */
    fun clearYear() {
      _builder.clearYear()
    }

    /**
     * <code>string ocn = 11;</code>
     */
    var ocn: kotlin.String
      @JvmName("getOcn")
      get() = _builder.getOcn()
      @JvmName("setOcn")
      set(value) {
        _builder.setOcn(value)
      }
    /**
     * <code>string ocn = 11;</code>
     */
    fun clearOcn() {
      _builder.clearOcn()
    }

    /**
     * <code>string image = 12;</code>
     */
    var image: kotlin.String
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * <code>string image = 12;</code>
     */
    fun clearImage() {
      _builder.clearImage()
    }

    /**
     * <code>uint32 countAvailable = 13;</code>
     */
    var countAvailable: kotlin.Int
      @JvmName("getCountAvailable")
      get() = _builder.getCountAvailable()
      @JvmName("setCountAvailable")
      set(value) {
        _builder.setCountAvailable(value)
      }
    /**
     * <code>uint32 countAvailable = 13;</code>
     */
    fun clearCountAvailable() {
      _builder.clearCountAvailable()
    }

    /**
     * <code>string modelName = 14;</code>
     */
    var modelName: kotlin.String
      @JvmName("getModelName")
      get() = _builder.getModelName()
      @JvmName("setModelName")
      set(value) {
        _builder.setModelName(value)
      }
    /**
     * <code>string modelName = 14;</code>
     */
    fun clearModelName() {
      _builder.clearModelName()
    }

    /**
     * <code>uint32 discountState = 15;</code>
     */
    var discountState: kotlin.Int
      @JvmName("getDiscountState")
      get() = _builder.getDiscountState()
      @JvmName("setDiscountState")
      set(value) {
        _builder.setDiscountState(value)
      }
    /**
     * <code>uint32 discountState = 15;</code>
     */
    fun clearDiscountState() {
      _builder.clearDiscountState()
    }

    /**
     * <code>uint32 discountStart = 16;</code>
     */
    var discountStart: kotlin.Int
      @JvmName("getDiscountStart")
      get() = _builder.getDiscountStart()
      @JvmName("setDiscountStart")
      set(value) {
        _builder.setDiscountStart(value)
      }
    /**
     * <code>uint32 discountStart = 16;</code>
     */
    fun clearDiscountStart() {
      _builder.clearDiscountStart()
    }

    /**
     * <code>uint32 creditAvailable = 17;</code>
     */
    var creditAvailable: kotlin.Int
      @JvmName("getCreditAvailable")
      get() = _builder.getCreditAvailable()
      @JvmName("setCreditAvailable")
      set(value) {
        _builder.setCreditAvailable(value)
      }
    /**
     * <code>uint32 creditAvailable = 17;</code>
     */
    fun clearCreditAvailable() {
      _builder.clearCreditAvailable()
    }

    /**
     * <code>uint32 cashAvailable = 18;</code>
     */
    var cashAvailable: kotlin.Int
      @JvmName("getCashAvailable")
      get() = _builder.getCashAvailable()
      @JvmName("setCashAvailable")
      set(value) {
        _builder.setCashAvailable(value)
      }
    /**
     * <code>uint32 cashAvailable = 18;</code>
     */
    fun clearCashAvailable() {
      _builder.clearCashAvailable()
    }

    /**
     * <code>string uuid = 19;</code>
     */
    var uuid: kotlin.String
      @JvmName("getUuid")
      get() = _builder.getUuid()
      @JvmName("setUuid")
      set(value) {
        _builder.setUuid(value)
      }
    /**
     * <code>string uuid = 19;</code>
     */
    fun clearUuid() {
      _builder.clearUuid()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun CarsOuterClass.Car.copy(block: CarKt.Dsl.() -> Unit): CarsOuterClass.Car =
  CarKt.Dsl._create(this.toBuilder()).apply { block() }._build()
