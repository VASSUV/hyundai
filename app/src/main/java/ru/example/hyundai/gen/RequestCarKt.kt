package ru.example.hyundai.gen

import ru.example.hyundai.gen.Request

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: request.proto

@kotlin.jvm.JvmSynthetic
inline fun requestCar(block: RequestCarKt.Dsl.() -> Unit): Request.RequestCar =
  RequestCarKt.Dsl._create(Request.RequestCar.newBuilder()).apply { block() }._build()
object RequestCarKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: Request.RequestCar.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Request.RequestCar.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Request.RequestCar = _builder.build()

    /**
     * <code>uint32 dealerId = 1;</code>
     */
    var dealerId: kotlin.Int
      @JvmName("getDealerId")
      get() = _builder.getDealerId()
      @JvmName("setDealerId")
      set(value) {
        _builder.setDealerId(value)
      }
    /**
     * <code>uint32 dealerId = 1;</code>
     */
    fun clearDealerId() {
      _builder.clearDealerId()
    }

    /**
     * <code>string firstName = 2;</code>
     */
    var firstName: kotlin.String
      @JvmName("getFirstName")
      get() = _builder.getFirstName()
      @JvmName("setFirstName")
      set(value) {
        _builder.setFirstName(value)
      }
    /**
     * <code>string firstName = 2;</code>
     */
    fun clearFirstName() {
      _builder.clearFirstName()
    }

    /**
     * <code>string lastName = 3;</code>
     */
    var lastName: kotlin.String
      @JvmName("getLastName")
      get() = _builder.getLastName()
      @JvmName("setLastName")
      set(value) {
        _builder.setLastName(value)
      }
    /**
     * <code>string lastName = 3;</code>
     */
    fun clearLastName() {
      _builder.clearLastName()
    }

    /**
     * <code>string phone = 4;</code>
     */
    var phone: kotlin.String
      @JvmName("getPhone")
      get() = _builder.getPhone()
      @JvmName("setPhone")
      set(value) {
        _builder.setPhone(value)
      }
    /**
     * <code>string phone = 4;</code>
     */
    fun clearPhone() {
      _builder.clearPhone()
    }

    /**
     * <code>string email = 5;</code>
     */
    var email: kotlin.String
      @JvmName("getEmail")
      get() = _builder.getEmail()
      @JvmName("setEmail")
      set(value) {
        _builder.setEmail(value)
      }
    /**
     * <code>string email = 5;</code>
     */
    fun clearEmail() {
      _builder.clearEmail()
    }

    /**
     * <code>fixed64 carId = 6;</code>
     */
    var carId: kotlin.Long
      @JvmName("getCarId")
      get() = _builder.getCarId()
      @JvmName("setCarId")
      set(value) {
        _builder.setCarId(value)
      }
    /**
     * <code>fixed64 carId = 6;</code>
     */
    fun clearCarId() {
      _builder.clearCarId()
    }

    /**
     * <code>string sms = 7;</code>
     */
    var sms: kotlin.String
      @JvmName("getSms")
      get() = _builder.getSms()
      @JvmName("setSms")
      set(value) {
        _builder.setSms(value)
      }
    /**
     * <code>string sms = 7;</code>
     */
    fun clearSms() {
      _builder.clearSms()
    }

    /**
     * <code>uint32 buyType = 8;</code>
     */
    var buyType: kotlin.Int
      @JvmName("getBuyType")
      get() = _builder.getBuyType()
      @JvmName("setBuyType")
      set(value) {
        _builder.setBuyType(value)
      }
    /**
     * <code>uint32 buyType = 8;</code>
     */
    fun clearBuyType() {
      _builder.clearBuyType()
    }

    /**
     * <code>string transmission = 9;</code>
     */
    var transmission: kotlin.String
      @JvmName("getTransmission")
      get() = _builder.getTransmission()
      @JvmName("setTransmission")
      set(value) {
        _builder.setTransmission(value)
      }
    /**
     * <code>string transmission = 9;</code>
     */
    fun clearTransmission() {
      _builder.clearTransmission()
    }

    /**
     * <code>string engineCapacity = 10;</code>
     */
    var engineCapacity: kotlin.String
      @JvmName("getEngineCapacity")
      get() = _builder.getEngineCapacity()
      @JvmName("setEngineCapacity")
      set(value) {
        _builder.setEngineCapacity(value)
      }
    /**
     * <code>string engineCapacity = 10;</code>
     */
    fun clearEngineCapacity() {
      _builder.clearEngineCapacity()
    }

    /**
     * <code>string enginePower = 11;</code>
     */
    var enginePower: kotlin.String
      @JvmName("getEnginePower")
      get() = _builder.getEnginePower()
      @JvmName("setEnginePower")
      set(value) {
        _builder.setEnginePower(value)
      }
    /**
     * <code>string enginePower = 11;</code>
     */
    fun clearEnginePower() {
      _builder.clearEnginePower()
    }

    /**
     * <code>string frontId = 12;</code>
     */
    var frontId: kotlin.String
      @JvmName("getFrontId")
      get() = _builder.getFrontId()
      @JvmName("setFrontId")
      set(value) {
        _builder.setFrontId(value)
      }
    /**
     * <code>string frontId = 12;</code>
     */
    fun clearFrontId() {
      _builder.clearFrontId()
    }

    /**
     * <code>string captcha = 13;</code>
     */
    var captcha: kotlin.String
      @JvmName("getCaptcha")
      get() = _builder.getCaptcha()
      @JvmName("setCaptcha")
      set(value) {
        _builder.setCaptcha(value)
      }
    /**
     * <code>string captcha = 13;</code>
     */
    fun clearCaptcha() {
      _builder.clearCaptcha()
    }

    /**
     * <code>string utmObject = 14;</code>
     */
    var utmObject: kotlin.String
      @JvmName("getUtmObject")
      get() = _builder.getUtmObject()
      @JvmName("setUtmObject")
      set(value) {
        _builder.setUtmObject(value)
      }
    /**
     * <code>string utmObject = 14;</code>
     */
    fun clearUtmObject() {
      _builder.clearUtmObject()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun Request.RequestCar.copy(block: RequestCarKt.Dsl.() -> Unit): Request.RequestCar =
  RequestCarKt.Dsl._create(this.toBuilder()).apply { block() }._build()
